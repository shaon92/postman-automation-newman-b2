{
	"info": {
		"_postman_id": "0ccb9d56-7707-4ed7-8658-5d999ebf5364",
		"name": "BATCH-2 Customer API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Customer Log in",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"var token = jsonData.token;\r",
							"pm.environment.set(\"token\",token);\r",
							"\r",
							"if (jsonData.token == null) {\r",
							"\r",
							"    pm.test(\"Status code is 401 for unsuccessful login\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"    })\r",
							"\r",
							"    pm.test(\"Get Error message for unsuccessful Login\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.error.message).includes(\"Username or password incorrect\");\r",
							"    })\r",
							"\r",
							"    pm.test(\"Response time within 1500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1500);       \r",
							"    })  \r",
							"}\r",
							"else {\r",
							"    pm.test(\"Status code is 200 for successful login\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"    })\r",
							"\r",
							"    pm.test(\"Response time within 1500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1500);       \r",
							"    })  \r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\":\"salman\",\r\n    \"password\":\"salman1234\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/login",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Customer List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.environment.get(\"token\")==null){\r",
							"     pm.test(\"Status code is 403, forbidden\", function () {\r",
							"        pm.response.to.have.status(403);\r",
							"    })\r",
							"    pm.test(\"Error message for unauthorized access to customer list\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.error.message).includes(\"Token expired\");\r",
							"    })\r",
							"\r",
							"    pm.test(\"Response time within 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);       \r",
							"    })  \r",
							"}\r",
							"\r",
							"else {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.test(\"Check customer count\", function () {      \r",
							"        pm.expect(jsonData.Customers.length).to.eql(jsonData.Count);\r",
							"    })\r",
							"    pm.test(\"Fetch 1st customer\", function () {\r",
							"        pm.expect(jsonData.Customers[0].id).to.eql(101);\r",
							"    })\r",
							"\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    })\r",
							"\r",
							"    pm.test(\"Response time within 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);       \r",
							"    })  \r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/list",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"list"
					]
				}
			},
			"response": []
		},
		{
			"name": "Search Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.environment.get(\"token\")==null){\r",
							"     pm.test(\"Status code is 403, forbidden\", function () {\r",
							"        pm.response.to.have.status(403);\r",
							"    })\r",
							"    pm.test(\"Error message for unauthorized access to customer list\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.error.message).includes(\"Token expired\");\r",
							"    })\r",
							"\r",
							"    pm.test(\"Response time within 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);       \r",
							"    })  \r",
							"}\r",
							"\r",
							"else {\r",
							"    if (pm.response.code == 404) {\r",
							"        pm.test(\"Status code is 404 for unsuccessful search\", function () {\r",
							"        pm.response.to.have.status(404);\r",
							"        })\r",
							"\r",
							"        pm.test(\"Error message for unsuccessful search\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.error.message).includes(\"Customer info not found\");\r",
							"    })\r",
							"    }\r",
							"    else  {\r",
							"        pm.test(\"Status code is 200 for successful search\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"        })\r",
							"\r",
							"        pm.test(\"Search specific customer\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.id).to.eql(101)\r",
							"        })\r",
							"    }\r",
							"\r",
							"    pm.test(\"Response time within 800ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(800);       \r",
							"    })   \r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/get/101",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"get",
						"101"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create New Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.environment.get(\"token\")==null){\r",
							"     pm.test(\"Status code is 403, forbidden for unauthorized access\", function () {\r",
							"        pm.response.to.have.status(403);\r",
							"    })\r",
							"    pm.test(\"Error message for unauthorized access to create customer\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.error.message).includes(\"Token expired\");\r",
							"    })\r",
							" \r",
							"    pm.test(\"Response time within 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);       \r",
							"    })  \r",
							"}\r",
							"\r",
							"else {\r",
							"    pm.test(\"Status code is 201 for creating customer successfully\", function () {\r",
							"        pm.response.to.have.status(201);\r",
							"    })\r",
							"\r",
							"    pm.test(\"Check status for creating customer successfully\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.message).to.eql(\"Success\");\r",
							"    })\r",
							"\r",
							"    pm.test(\"Response time within 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);       \r",
							"    })  \r",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id=_.random(1000,9000)\r",
							"pm.environment.set(\"id\",id );\r",
							"const reqObject = {\r",
							" url: 'https://api.namefake.com/english-united-states/male/',\r",
							" method: 'GET',\r",
							" header: 'Content-Type:application/json'\r",
							"};\r",
							"pm.sendRequest(reqObject, (err, res) => {\r",
							" let {name} = res.json()\r",
							" let {phone_w}=res.json()\r",
							" let {email_u} = res.json()\r",
							" let email=email_u+'@testmail.com'\r",
							" \r",
							" pm.environment.set(\"name\", name);\r",
							" pm.environment.set(\"email\", email);\r",
							" pm.environment.set(\"phone_number\", phone_w);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"id\": {{id}},\r\n \"name\": \"{{name}}\",\r\n \"email\": \"{{email}}\",\r\n \"address\": \"Gulshan,Dhaka\",\r\n \"phone_number\": \"{{phone_number}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Generate Random Customer",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let id=_.random(1000,9000)\r",
							"pm.environment.set(\"id\",id );"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.environment.get(\"token\")==null){\r",
							"     pm.test(\"Status code is 403, forbidden for unauthorized access\", function () {\r",
							"        pm.response.to.have.status(403);\r",
							"    })\r",
							"    pm.test(\"Error message for unauthorized access to create random customer\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.error.message).includes(\"Token expired\");\r",
							"    })\r",
							" \r",
							"    pm.test(\"Response time within 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);       \r",
							"    })  \r",
							"}\r",
							"else {\r",
							"    pm.test(\"Status code is 201 for creating random customer successfully\", function () {\r",
							"        pm.response.to.have.status(201);\r",
							"    })\r",
							"\r",
							"    pm.test(\"Check status for creating random customer successfully\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.message).to.eql(\"Success\");\r",
							"    })\r",
							"\r",
							"    pm.test(\"Response time within 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);       \r",
							"    })  \r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"id\": {{id}},\r\n \"name\": \"{{$randomFullName}}\",\r\n \"email\": \"{{$randomEmail}}\",\r\n \"address\": \"{{$randomStreetAddress}}\",\r\n \"phone_number\": \"{{$randomPhoneNumber}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.environment.get(\"token\")==null){\r",
							"     pm.test(\"Status code is 403, forbidden for unauthorized access\", function () {\r",
							"        pm.response.to.have.status(403);\r",
							"    })\r",
							"    pm.test(\"Error message for unauthorized access to update customer\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.error.message).includes(\"Token expired\");\r",
							"    })\r",
							" \r",
							"    pm.test(\"Response time within 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);       \r",
							"    })  \r",
							"}\r",
							"\r",
							"else {   \r",
							"    if (pm.response.code == 404) {\r",
							"        pm.test(\"Status code is 404 for unsuccessful update\", function () {\r",
							"        pm.response.to.have.status(404);\r",
							"        })\r",
							"\r",
							"        pm.test(\"Error message for unsuccessful update\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.error.message).includes(\"Customer data not found\");\r",
							"    })\r",
							"    }\r",
							"    else  {\r",
							"        pm.test(\"Status code is 200 for successful update\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"        })\r",
							"\r",
							"        pm.test(\"Update customer\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.Customers.address).includes(\"Mirpur\");\r",
							"        })   \r",
							"        }\r",
							"    pm.test(\"Response time within 800ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(800);       \r",
							"    })   \r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 101,\r\n    \"name\": \"Mr. Jamal Islam\",\r\n    \"email\": \"mrjamal@test.com\",\r\n    \"address\": \"Mirpur,Dhaka\",\r\n    \"phone_number\": \"01502020110\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/update/101",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"update",
						"101"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.environment.get(\"token\")==null){\r",
							"     pm.test(\"Status code is 403, forbidden for unauthorized access\", function () {\r",
							"        pm.response.to.have.status(403);\r",
							"    })\r",
							"    pm.test(\"Error message for unauthorized access to update customer\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.error.message).includes(\"Token expired\");\r",
							"    })\r",
							"    pm.test(\"Response time within 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);       \r",
							"    })  \r",
							"}\r",
							"\r",
							"else {   \r",
							"    if (pm.response.code == 404) {\r",
							"        pm.test(\"Status code is 404 for unsuccessful delete\", function () {\r",
							"        pm.response.to.have.status(404);\r",
							"        })\r",
							"        pm.test(\"Error message for unsuccessful delete\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.error.message).includes(\"Customer not found\");\r",
							"        })\r",
							"    }\r",
							"    else  {\r",
							"        pm.test(\"Status code is 200 for successful update\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"        })\r",
							"        pm.test(\"Delete Customer\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.message).to.eql(\"Customer deleted!\");\r",
							"        })       \r",
							"    }\r",
							"\r",
							"    pm.test(\"Response time within 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);       \r",
							"    })  \r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/delete/{{id}}",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"delete",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Exsisting Customer",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"if(pm.environment.get(\"token\")==null){\r",
							"     pm.test(\"Status code is 403, forbidden for unauthorized access\", function () {\r",
							"        pm.response.to.have.status(403);\r",
							"    })\r",
							"    pm.test(\"Error message for unauthorized access to create existing customer\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.error.message).includes(\"Token expired\");\r",
							"    })\r",
							"    pm.test(\"Response time within 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);       \r",
							"    })  \r",
							"}\r",
							"\r",
							"else {  \r",
							"    pm.test(\"Status code is 208 for already exists\", function () {\r",
							"        pm.response.to.have.status(208);\r",
							"    })\r",
							"    pm.test(\"Error message for already exists\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.error.message).includes(\"already exists\");\r",
							"    })\r",
							"    pm.test(\"Response time within 500ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(500);       \r",
							"    })  \r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n \"id\": 101,\r\n \"name\": \"{{name}}\",\r\n \"email\": \"{{email}}\",\r\n \"address\": \"Gulshan,Dhaka\",\r\n \"phone_number\": \"{{phone_number}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL}}/customer/api/v1/create",
					"host": [
						"{{baseURL}}"
					],
					"path": [
						"customer",
						"api",
						"v1",
						"create"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}
